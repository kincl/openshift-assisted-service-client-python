# coding: utf-8

"""
    AssistedInstall

    Assisted installation  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import openshift_assisted_service
from openshift_assisted_service.models.infra_env_create_params import InfraEnvCreateParams  # noqa: E501
from openshift_assisted_service.rest import ApiException

class TestInfraEnvCreateParams(unittest.TestCase):
    """InfraEnvCreateParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InfraEnvCreateParams
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InfraEnvCreateParams`
        """
        model = openshift_assisted_service.models.infra_env_create_params.InfraEnvCreateParams()  # noqa: E501
        if include_optional :
            return InfraEnvCreateParams(
                name = '', 
                proxy = openshift_assisted_service.models.proxy.proxy(
                    http_proxy = '', 
                    https_proxy = '', 
                    no_proxy = '', ), 
                additional_ntp_sources = '', 
                ssh_authorized_key = '', 
                pull_secret = '', 
                static_network_config = [
                    openshift_assisted_service.models.host_static_network_config.host_static_network_config(
                        network_yaml = '', 
                        mac_interface_map = [
                            openshift_assisted_service.models.mac_interface_map_inner.mac_interface_map_inner(
                                mac_address = '62:CB:20:42:30:c0', 
                                logical_nic_name = '', )
                            ], )
                    ], 
                image_type = 'full-iso', 
                ignition_config_override = '', 
                cluster_id = '', 
                openshift_version = '', 
                cpu_architecture = 'x86_64', 
                kernel_arguments = [
                    openshift_assisted_service.models.kernel_argument.kernel_argument(
                        operation = 'append', 
                        value = '\"?x u'K}qz^sEC)lJ*=-jQ+'6`%cClu,k' 'su[.lzF6V,V6rEtCO?&28nxs#k8z)!\\\"', )
                    ], 
                additional_trust_bundle = ''
            )
        else :
            return InfraEnvCreateParams(
                name = '',
                pull_secret = '',
        )
        """

    def testInfraEnvCreateParams(self):
        """Test InfraEnvCreateParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
