# coding: utf-8

"""
    AssistedInstall

    Assisted installation  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


import unittest
import datetime

import openshift_assisted_service
from openshift_assisted_service.models.domain_resolution_request import DomainResolutionRequest  # noqa: E501
from openshift_assisted_service.rest import ApiException

class TestDomainResolutionRequest(unittest.TestCase):
    """DomainResolutionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test DomainResolutionRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DomainResolutionRequest`
        """
        model = openshift_assisted_service.models.domain_resolution_request.DomainResolutionRequest()  # noqa: E501
        if include_optional :
            return DomainResolutionRequest(
                domains = [
                    openshift_assisted_service.models.domain_resolution_request_domains_inner.domain_resolution_request_domains_inner(
                        domain_name = 'u2LC4-wWL9Y864DZtaGRyyGFZKkkp4zca0U0gGbVVjddR9l98FWekFL9DLWykFbsjF7LMdeXylwK0lMGUSM4j-rh4dstlnQUN-vVdMLPAP-RWMMEqkO8tHOwlhIwkT5yJOZfzRn9kqGTEBlwpCDcpNjORpuEGrQXd2sivg8GylZGweCa-6gZt9ILrESWRhZJlmyQ08IE3Y1VNFIln0b2pVHpxhuKIGfVb9wPmp29mAQ651zZ6j3RdNyik8aiqWs-LCYeP9kHtE16Qt5H3oz3Ny4SJxvbc8u0cDBVwJi0rq2c8DwrNpN2sPinNFmz3LU26-6CXwioP4Fr79P-T1kLgMNHxXHS1T8LOYiEBKQB6bqWmmSPe2Ndg7-wHfTLkqCffG9rEzD7PG2ORKnxgzXjlmxQS68oPoEuFPD-suEC9tYuScbrGLh6qSELdHb6H8EYDF6v5xTHXwdBPVUXzIjzKOEHPi1VdCYjtSv-M92q3KV0kRS7D73VtGrthhzRtkmW07-6E5v2IyrAwE7tNkYUGkUdR59J4kn8Ges1jvYJ73u0rgAD5Xl9rT-eOTyV06IDVobT3zSaaPuyPYaUw6pSSmSGHfV5zwWumGC5cbx70kSRoaYOsHRisRhWDOIgDDcKZ-qiKYt1JVn1wK6YPcjJbW6YTJK5gXHVe9tDs6BVvjzVJYxKIK6uWhyxQGC1ucqwE-ineBlPN6dRCUmj7C55Ofpe1x4f4fYXaRa7UN7nG6oiJuBtH08zgj1FIjx9oWk84AWc0EGnuvOWYzCZycNaxn-aPj86cxeYiCuuuuIUQdo3ZTkuYc7vdD6noRL25ES1odXAfeVrbMr2CiEaqwmDVTSmsBNkL-vCjckSRQszuPBwcxT9okEVJKEodSbYTm9j2AxfC69LWTnWhiMVFLZSJthowtUTFMBIHH1f6BaFau8ln9GslQRprOyy03Yfq1-x8SLJ3zwG14NiqdwizBiXsWXT46oDh3TUifZ3YADzBX3eqX8Di2i4SnqsPI1TaWhVln6srwnqnP0VddwrU3l6KHXro-JsWR3xs7F0Gf9sMyoJGHTAEqPUNFR7zbT38BaEKxCwdf53WlCzP4lx1Ro-8bG0rcsXsQb-JiUVA7N8VHFH-BZXCV0UEuO3VnslWx2AeQOuZj7JSKeme6TWMU5vv8yYpmoifabpmjqqDLULBiCI-BJRt5JNYH8eQ0ljQZ8xEuFoipsMPdvU-nE6SrKJtQmlkgb5BBDuj6uFYY1SfLJE7qSif0HoeuIXSQphPtTTKu31JDyXnozl-AnrsBovvtrmEqwOoV21KKdhZEFDoRaeyIbwU-zwZjkQsbKrHBboXaBBlWw2NYD6l1YfoINXYB45dawWEIYUeVa-ZpuY3QpK0JvIuWtZQHnnnf9IsyxFeCWfvVnlfoYLiAfHpGitfgoIfPklgjPBzYgtJ-LViuZcuhw8Ws8i3MadtDtQymqmgNVw7TbBxB3CZ2SjiBD7tBv4znCnaGAyZt3PE2xJg900opNS8CfAc2ra8x7jXN-n6ltZ2VdWaMV5bDx7bZXnoy9ROOtDF7NRTFM1TRiU6SRIpbdjhpjfohjPA-EiCGXtM6D0VR-AIrO9cf1cFoqplBdHw4SpEhiyod4BWa7iTDpbATHxCXa09T3XLmELpD22lK-5XY2Lzx1YhkMSfpG-p3lxWbzzNSP20k5xq3EO2set4ui9vSRYSqmtlKoMeMN2Qzx-nxC9drFGforjwAHRk2CUXSuLVs0bgUsbwYDhJKngPuImpAryhbZ3hdp9Q9d5Z4DTBswdQFmaR-OlRJiXjWAi2dwZPtN5NlSTYbi7qX9t6padP5162rqhB7unp4fl5hU4h-2BH4PN50eK05s4jF1ipGNabGnFkZqEBNwmKJ0CEfx-a8aS8Zu1z8P6Byx5NY6CU4aLYL7TMaGlgMoRjq8d3sXuyXbX7OnEkgeItSvNzEFnvRgKgDQ-ccJSWHUzDEEJIbuf-Rb2btJMWAxSgVsdzHbHB0jVvafDkNfwo6kwEvnQEm4sHU2-m2zFaxTzEtd-5pPuRcqUZBqFZv30y0-FwdacX2-jlIXCJuKn5F9J6OqR2YdoKbLgzTV7Y9UtIB-toftOQg8avqpBSt5FA3lgbcf07XJmXbo-k9UNiislmpzdmn9rZc67SAe5UdhIRY35eG2ngvGrXgPolxqxxmnhU5ZM5vzOqaewMWZYqAuwnIwQylHzL8cMC177-piajakjD556bP1pOM9G0dQABSzagkVdA0-DdD2vNFzLW-CiODYUfGkSf8QbTdnsl14xkgobMV1ZTUnGb6meeJ2yTZQPyLz8jOFH9txs71jUHCLs7LAR8urT66MqIJRgAlgyw2cYsTX-lJdxcm69ZiEYgzpOylDLZvgM3cikdgDnUhsYkv25sjBc9YRnQfc-sUq1UseggLqRv2K8ow2HVkCi3hNpXZbTTcjxtPeTNUV8NzEUMtAduEeFkTgaS4iBQUBSRjgzEHBgFxz1EaF93NIKDDeys1U-hbY2ec9j9LYMrBnstYRPAEbC8LTtGlVcj32RnLOyzYw64rbgWh-Sex5GkzAK6r8opQeglyejKMxZB3GAhXfcD-TvqIgNTpcPluAmDQ8sQ-nVKuA8NFv6ynETjQe5rb2mmi67IYCVUhit0r8RMmKKCAOX2PnFUhVE7xL0gw0t7dKd9cfVtSimY-0LlR8vaINgIp12C11D1iO3pXZdyz91Dp9G1OG6Xr-p02kpfX5f1PklhrlpWNz7bFuK2KpvU1tgQtLACNUx9EUSSxWSS7R3dXXQ2XN89abgUH0pEA84BAp7cbEd-O7e2lLhzbVzF6n5MKfuVcKXA09mtW0BIOxUr9j8Tk3SfKGzuM1Lo5BPYbADDVBE1VqU31xkfSy5ZL2bW9cQ2quk2sr3J4hs-E-FMx6gv50gCsC5bMgTk8fX9SiVQn5uNLDtPuq9r839VZpiro-0xZ5aoUftOtgvds2Knh60vDKthAzgsVzhX-jQKxVRRfFXrfFOZS7SGkR9LMXAYRLS3HzF7oe-19gelceXeVdIeS0XUGauARSPwlo4-3iS9eWHUDMid4w5rMB4T6QBkpUwzLDkrjM40RGBW5zIhPJ8zqwAcG0CXfZldVKKsAmYSKKvEgNde2WIc6-egNBAcF50DsIBBkkI1XNxB28YEwTdwXAc0yDSQ7j00g-OpC0x6Lk0klfGRFTiJpk1jIFT-7-nSDKAoDNHBlNilqoPCutw0YAJTN8kW-He649GtlDyLZ3K7uVU9KPetpIm5Rkkn5IfRSuXPagSP2tcC7PTbdGu8Pg05dAszryJtGAYfTvDVgJzsoqebglFomz1-sJ44HvwdEJCSue-MZCu3V-lKLQ9fcbN-Cray7LS2gOTctN65nRIBc6UT96PeEg64JTnwyHpbjmE2plCRorGXsSt1jIGgi9aOJe-GapgNk990F8RhKO5V1KTwhDH7lUFGo8GvFNq-CSVQZqZ8PXCXaRFPjmFZDG9WU4SIcY28FjGb-qOrTTSFjf8fSrdFA9V8SN8K6AHyF555GqjWa2g1A4fiv0CnFL1EZCkKFvjC95cxGEcGVKLoJxqbuc0-414ZNOUElKwRpCPwb6YGqcGeEyJOeiW1sAyLqDhri6scQXRQOJn8UWpv-dmhRvYfWnmz6psJDgC2LgFtSQsRea5n-hd7mApFS7IcTH2QBovLMqUM5sF5I2G8Ru398ZXTILlf1CcPyVDUiHFTH5z4Y6NapisxV3da-WYg5nfUcXpOrYdGXNpttZ0SBDHX-Av2niXiFlcwAHfqIaTt9ItTiPIKmHQtZd2r8PiYgaMitnf1E-jeif-ieIAcTlIiU1ACxODrZU4ptfBFLETHWnTMDrd8TqvbUKgoATe4wouKKik-36UbzV5dBnaAbWzIgKPNazzuoEnbckgAJEJAyd7aBmCpANAHNNwGf8a0SW7tIxgzUkxGAvJIGHKzPFaBNVgX-wq4ESLe5TUl4n6DJVahc7D8ZMVwcxYlp623O5ZGDfcKWaxrbvHp5xCCa9BQn-hG6aesTmwpKLqbU1XDrquS1Zw1NlMw9B4ToyxDaQFpZv7bpxpVngUxkrS3cDOKaWaNnYEzT37JzSrVKJyH8fnbgvhNFBGfloD-kE3WSkYpUOvWdrbzwYoeqg0DXPHpKqyQpD7gqi0hqdBk3aKTbPFuoe7plbdTitfi9QSlaJeFLyB0w59z2-Fib5lQPWb0GDPhxb2BGCbJcvkUU7rMjwCaUeOzzxQuceydaSZpJesek2mMuYrItqiZz2-2axE4D2xPnJ0RSlWkzMqM5MX7P0hovOEsqIUKfsxrXY7mdwXRZhyKalJ-pATnHbSFby4GwO34-0dH0OlpypDTz24kRqCRHFWNAzWIrKniaverOctGXUPpqhLvBgKBbn9D4wcUbvTGTrXRoEzUNPuVqm1aQ67GK0oJfF61gSMBk743c.eOdwKsYaLXPdLtGuWxighpTljGnaOdUcSPrnrfktUYcQBigCFagSdtLfSWyNlYNEmMVRHRptDtQUfnGbHTvuCOfppNe.', )
                    ]
            )
        else :
            return DomainResolutionRequest(
                domains = [
                    openshift_assisted_service.models.domain_resolution_request_domains_inner.domain_resolution_request_domains_inner(
                        domain_name = 'u2LC4-wWL9Y864DZtaGRyyGFZKkkp4zca0U0gGbVVjddR9l98FWekFL9DLWykFbsjF7LMdeXylwK0lMGUSM4j-rh4dstlnQUN-vVdMLPAP-RWMMEqkO8tHOwlhIwkT5yJOZfzRn9kqGTEBlwpCDcpNjORpuEGrQXd2sivg8GylZGweCa-6gZt9ILrESWRhZJlmyQ08IE3Y1VNFIln0b2pVHpxhuKIGfVb9wPmp29mAQ651zZ6j3RdNyik8aiqWs-LCYeP9kHtE16Qt5H3oz3Ny4SJxvbc8u0cDBVwJi0rq2c8DwrNpN2sPinNFmz3LU26-6CXwioP4Fr79P-T1kLgMNHxXHS1T8LOYiEBKQB6bqWmmSPe2Ndg7-wHfTLkqCffG9rEzD7PG2ORKnxgzXjlmxQS68oPoEuFPD-suEC9tYuScbrGLh6qSELdHb6H8EYDF6v5xTHXwdBPVUXzIjzKOEHPi1VdCYjtSv-M92q3KV0kRS7D73VtGrthhzRtkmW07-6E5v2IyrAwE7tNkYUGkUdR59J4kn8Ges1jvYJ73u0rgAD5Xl9rT-eOTyV06IDVobT3zSaaPuyPYaUw6pSSmSGHfV5zwWumGC5cbx70kSRoaYOsHRisRhWDOIgDDcKZ-qiKYt1JVn1wK6YPcjJbW6YTJK5gXHVe9tDs6BVvjzVJYxKIK6uWhyxQGC1ucqwE-ineBlPN6dRCUmj7C55Ofpe1x4f4fYXaRa7UN7nG6oiJuBtH08zgj1FIjx9oWk84AWc0EGnuvOWYzCZycNaxn-aPj86cxeYiCuuuuIUQdo3ZTkuYc7vdD6noRL25ES1odXAfeVrbMr2CiEaqwmDVTSmsBNkL-vCjckSRQszuPBwcxT9okEVJKEodSbYTm9j2AxfC69LWTnWhiMVFLZSJthowtUTFMBIHH1f6BaFau8ln9GslQRprOyy03Yfq1-x8SLJ3zwG14NiqdwizBiXsWXT46oDh3TUifZ3YADzBX3eqX8Di2i4SnqsPI1TaWhVln6srwnqnP0VddwrU3l6KHXro-JsWR3xs7F0Gf9sMyoJGHTAEqPUNFR7zbT38BaEKxCwdf53WlCzP4lx1Ro-8bG0rcsXsQb-JiUVA7N8VHFH-BZXCV0UEuO3VnslWx2AeQOuZj7JSKeme6TWMU5vv8yYpmoifabpmjqqDLULBiCI-BJRt5JNYH8eQ0ljQZ8xEuFoipsMPdvU-nE6SrKJtQmlkgb5BBDuj6uFYY1SfLJE7qSif0HoeuIXSQphPtTTKu31JDyXnozl-AnrsBovvtrmEqwOoV21KKdhZEFDoRaeyIbwU-zwZjkQsbKrHBboXaBBlWw2NYD6l1YfoINXYB45dawWEIYUeVa-ZpuY3QpK0JvIuWtZQHnnnf9IsyxFeCWfvVnlfoYLiAfHpGitfgoIfPklgjPBzYgtJ-LViuZcuhw8Ws8i3MadtDtQymqmgNVw7TbBxB3CZ2SjiBD7tBv4znCnaGAyZt3PE2xJg900opNS8CfAc2ra8x7jXN-n6ltZ2VdWaMV5bDx7bZXnoy9ROOtDF7NRTFM1TRiU6SRIpbdjhpjfohjPA-EiCGXtM6D0VR-AIrO9cf1cFoqplBdHw4SpEhiyod4BWa7iTDpbATHxCXa09T3XLmELpD22lK-5XY2Lzx1YhkMSfpG-p3lxWbzzNSP20k5xq3EO2set4ui9vSRYSqmtlKoMeMN2Qzx-nxC9drFGforjwAHRk2CUXSuLVs0bgUsbwYDhJKngPuImpAryhbZ3hdp9Q9d5Z4DTBswdQFmaR-OlRJiXjWAi2dwZPtN5NlSTYbi7qX9t6padP5162rqhB7unp4fl5hU4h-2BH4PN50eK05s4jF1ipGNabGnFkZqEBNwmKJ0CEfx-a8aS8Zu1z8P6Byx5NY6CU4aLYL7TMaGlgMoRjq8d3sXuyXbX7OnEkgeItSvNzEFnvRgKgDQ-ccJSWHUzDEEJIbuf-Rb2btJMWAxSgVsdzHbHB0jVvafDkNfwo6kwEvnQEm4sHU2-m2zFaxTzEtd-5pPuRcqUZBqFZv30y0-FwdacX2-jlIXCJuKn5F9J6OqR2YdoKbLgzTV7Y9UtIB-toftOQg8avqpBSt5FA3lgbcf07XJmXbo-k9UNiislmpzdmn9rZc67SAe5UdhIRY35eG2ngvGrXgPolxqxxmnhU5ZM5vzOqaewMWZYqAuwnIwQylHzL8cMC177-piajakjD556bP1pOM9G0dQABSzagkVdA0-DdD2vNFzLW-CiODYUfGkSf8QbTdnsl14xkgobMV1ZTUnGb6meeJ2yTZQPyLz8jOFH9txs71jUHCLs7LAR8urT66MqIJRgAlgyw2cYsTX-lJdxcm69ZiEYgzpOylDLZvgM3cikdgDnUhsYkv25sjBc9YRnQfc-sUq1UseggLqRv2K8ow2HVkCi3hNpXZbTTcjxtPeTNUV8NzEUMtAduEeFkTgaS4iBQUBSRjgzEHBgFxz1EaF93NIKDDeys1U-hbY2ec9j9LYMrBnstYRPAEbC8LTtGlVcj32RnLOyzYw64rbgWh-Sex5GkzAK6r8opQeglyejKMxZB3GAhXfcD-TvqIgNTpcPluAmDQ8sQ-nVKuA8NFv6ynETjQe5rb2mmi67IYCVUhit0r8RMmKKCAOX2PnFUhVE7xL0gw0t7dKd9cfVtSimY-0LlR8vaINgIp12C11D1iO3pXZdyz91Dp9G1OG6Xr-p02kpfX5f1PklhrlpWNz7bFuK2KpvU1tgQtLACNUx9EUSSxWSS7R3dXXQ2XN89abgUH0pEA84BAp7cbEd-O7e2lLhzbVzF6n5MKfuVcKXA09mtW0BIOxUr9j8Tk3SfKGzuM1Lo5BPYbADDVBE1VqU31xkfSy5ZL2bW9cQ2quk2sr3J4hs-E-FMx6gv50gCsC5bMgTk8fX9SiVQn5uNLDtPuq9r839VZpiro-0xZ5aoUftOtgvds2Knh60vDKthAzgsVzhX-jQKxVRRfFXrfFOZS7SGkR9LMXAYRLS3HzF7oe-19gelceXeVdIeS0XUGauARSPwlo4-3iS9eWHUDMid4w5rMB4T6QBkpUwzLDkrjM40RGBW5zIhPJ8zqwAcG0CXfZldVKKsAmYSKKvEgNde2WIc6-egNBAcF50DsIBBkkI1XNxB28YEwTdwXAc0yDSQ7j00g-OpC0x6Lk0klfGRFTiJpk1jIFT-7-nSDKAoDNHBlNilqoPCutw0YAJTN8kW-He649GtlDyLZ3K7uVU9KPetpIm5Rkkn5IfRSuXPagSP2tcC7PTbdGu8Pg05dAszryJtGAYfTvDVgJzsoqebglFomz1-sJ44HvwdEJCSue-MZCu3V-lKLQ9fcbN-Cray7LS2gOTctN65nRIBc6UT96PeEg64JTnwyHpbjmE2plCRorGXsSt1jIGgi9aOJe-GapgNk990F8RhKO5V1KTwhDH7lUFGo8GvFNq-CSVQZqZ8PXCXaRFPjmFZDG9WU4SIcY28FjGb-qOrTTSFjf8fSrdFA9V8SN8K6AHyF555GqjWa2g1A4fiv0CnFL1EZCkKFvjC95cxGEcGVKLoJxqbuc0-414ZNOUElKwRpCPwb6YGqcGeEyJOeiW1sAyLqDhri6scQXRQOJn8UWpv-dmhRvYfWnmz6psJDgC2LgFtSQsRea5n-hd7mApFS7IcTH2QBovLMqUM5sF5I2G8Ru398ZXTILlf1CcPyVDUiHFTH5z4Y6NapisxV3da-WYg5nfUcXpOrYdGXNpttZ0SBDHX-Av2niXiFlcwAHfqIaTt9ItTiPIKmHQtZd2r8PiYgaMitnf1E-jeif-ieIAcTlIiU1ACxODrZU4ptfBFLETHWnTMDrd8TqvbUKgoATe4wouKKik-36UbzV5dBnaAbWzIgKPNazzuoEnbckgAJEJAyd7aBmCpANAHNNwGf8a0SW7tIxgzUkxGAvJIGHKzPFaBNVgX-wq4ESLe5TUl4n6DJVahc7D8ZMVwcxYlp623O5ZGDfcKWaxrbvHp5xCCa9BQn-hG6aesTmwpKLqbU1XDrquS1Zw1NlMw9B4ToyxDaQFpZv7bpxpVngUxkrS3cDOKaWaNnYEzT37JzSrVKJyH8fnbgvhNFBGfloD-kE3WSkYpUOvWdrbzwYoeqg0DXPHpKqyQpD7gqi0hqdBk3aKTbPFuoe7plbdTitfi9QSlaJeFLyB0w59z2-Fib5lQPWb0GDPhxb2BGCbJcvkUU7rMjwCaUeOzzxQuceydaSZpJesek2mMuYrItqiZz2-2axE4D2xPnJ0RSlWkzMqM5MX7P0hovOEsqIUKfsxrXY7mdwXRZhyKalJ-pATnHbSFby4GwO34-0dH0OlpypDTz24kRqCRHFWNAzWIrKniaverOctGXUPpqhLvBgKBbn9D4wcUbvTGTrXRoEzUNPuVqm1aQ67GK0oJfF61gSMBk743c.eOdwKsYaLXPdLtGuWxighpTljGnaOdUcSPrnrfktUYcQBigCFagSdtLfSWyNlYNEmMVRHRptDtQUfnGbHTvuCOfppNe.', )
                    ],
        )
        """

    def testDomainResolutionRequest(self):
        """Test DomainResolutionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
